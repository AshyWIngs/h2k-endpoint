# HBase 1.4.13 / Shell
# Внимание: кластерный ключ формата "zk1,zk2,zk3:2181:/hbase" —
# hostы перечисляются через запятую, порт и znode‑parent задаются один раз в конце.

# --- Подготовка таблиц (включаем репликацию нужных CF) ---
# Пример: HISTORY — включаем репликацию CF 'd'
disable 'TBL_JTI_TRACE_CIS_HISTORY'
alter  'TBL_JTI_TRACE_CIS_HISTORY', { NAME => 'd', REPLICATION_SCOPE => 1 }
enable 'TBL_JTI_TRACE_CIS_HISTORY'

# Пример: таблица RECEIPT, хотим 'b' и 'd'
# disable 'RECEIPT'
# alter  'RECEIPT', { NAME => 'b', REPLICATION_SCOPE => 1 }
# alter  'RECEIPT', { NAME => 'd', REPLICATION_SCOPE => 1 }
# enable 'RECEIPT'

# Пример: DOCUMENTS с CF '0' и 'DOCUMENTS'
# disable 'DOCUMENTS'
# alter  'DOCUMENTS', { NAME => '0',          REPLICATION_SCOPE => 1 }
# alter  'DOCUMENTS', { NAME => 'DOCUMENTS',  REPLICATION_SCOPE => 1 }
# enable 'DOCUMENTS'

# --- Добавление peer с профилем "FAST" (максимальная скорость) ---
#  acks=1, idempotence=false, max.in.flight=5 — максимум TPS; дубликаты ловим на потребителе.
add_peer 'h2k_fast',
  {
    'ENDPOINT_CLASSNAME' => 'kz.qazmarka.h2k.endpoint.KafkaReplicationEndpoint',
    'CONFIG' => {
      # БАЗА: ключи читаются в Endpoint; peer-параметры перекрывают hbase-site.xml
      'h2k.kafka.bootstrap.servers'         => '10.254.3.111:9092,10.254.3.112:9092,10.254.3.113:9092',
      # client.id не задаём — Endpoint сам сгенерирует уникальный id per-host (hostname/UUID)
      'h2k.topic.pattern'                   => '${table}',              # ${table}|${namespace}|${qualifier}
      'h2k.cf.list'                         => 'd',                     # можно CSV: 'b,d'
# PK-колонки из rowkey автоматически инъектируются в payload (c,t,opd и пр.);
# включать их в h2k.cf.list не требуется, но в подсказке ёмкости учитываются как обычные поля.

      # Декодирование
      'h2k.decode.mode'                     => 'json-phoenix',          # 'simple' | 'json-phoenix'
# TIMESTAMP/DATE/TIME сериализуются как epoch millis (long); любой ARRAY -> JSON-массив
# null-значения пропускаются согласно h2k.json.serialize.nulls=false
      'h2k.schema.path'                     => '/opt/hbase-default-current/conf/schema.json',
# schema.json: кроме столбцов содержит PK, которые будут добавлены в Value в Kafka
      'h2k.json.serialize.nulls'            => 'false',

      # Метаполя в полезной нагрузке
      'h2k.payload.include.meta'           => 'false',
      'h2k.payload.include.meta.wal'       => 'false',
      'h2k.payload.include.rowkey'         => 'false',

      # RowKey/соль/подсказки ёмкости (для DEFAULT namespace имя без префикса)
      'h2k.rowkey.encoding'                 => 'BASE64',
      'h2k.salt.map'                        => 'TBL_JTI_TRACE_CIS_HISTORY=1',
      'h2k.capacity.hints'                  => 'TBL_JTI_TRACE_CIS_HISTORY=32',   # общее число полей (включая PK) = 32

      # Ожидание подтверждений внутри BatchSender
      'h2k.producer.await.every'            => '500',
      'h2k.producer.await.timeout.ms'       => '180000',
      # Диагностика BatchSender (читается при старте)
      'h2k.producer.batch.counters.enabled' => 'false',
      'h2k.producer.batch.debug.on.failure' => 'false',

      # --- Профиль FAST: максимум throughput; допускаем дубликаты ---
      'h2k.producer.enable.idempotence'     => 'false',
      'h2k.producer.acks'                   => '1',
      'h2k.producer.max.in.flight'          => '5',
      'h2k.producer.retries'                => '10',
      'h2k.producer.request.timeout.ms'     => '30000',
      'h2k.producer.delivery.timeout.ms'    => '90000',

      # Батчинг/сжатие
      'h2k.producer.linger.ms'              => '100',
      'h2k.producer.batch.size'             => '524288',
      'h2k.producer.compression.type'       => 'lz4',

      # Буферы/размеры
      'h2k.producer.buffer.memory'          => '268435456',
      'h2k.producer.max.request.size'       => '2097152',

      # TopicEnsurer (самодостаточность пира)
      'h2k.ensure.topics'                   => 'true',
      'h2k.topic.partitions'                => '12',
      'h2k.topic.replication'               => '3',
      'h2k.admin.timeout.ms'                => '30000',
      'h2k.ensure.unknown.backoff.ms'       => '5000'
    }
  }

# --- Проверка/отладка ---
list_peers
# Показать фильтр таблиц/CF, если был задан через set_peer_tableCFs:
show_peer_tableCFs 'h2k_fast'   # опционально
# Статус репликации:
status 'replication'
# Удаление пира (при необходимости):
# remove_peer 'h2k_fast'

# --- Быстрые подсказки по тюнингу (fast) ---
# Пики задержек:
#  - Уменьшите 'h2k.producer.linger.ms' (например, 5–20) — быстрее отправка, меньше батч.
#  - Уменьшите 'h2k.producer.batch.size' (например, 131072–262144) — более мелкие батчи уменьшают задержку.
#  - Уменьшите 'h2k.producer.await.every' (например, до 100–200) — чаще дожидаемся ACK, сглаживаем пики.
#
# Ошибки брокера (NOT_LEADER_FOR_PARTITION / TIMEOUT / NETWORK_EXCEPTION):
#  - Увеличьте 'h2k.producer.retries' (например, 20–100) и 'h2k.producer.request.timeout.ms' (до 60000–120000).
#  - При больших сообщениях на брокере проверьте 'message.max.bytes' и 'replica.fetch.max.bytes'.
#
# Переполнение буфера клиента (RecordAccumulator full / max.block.ms):
#  - Поднимайте 'h2k.producer.buffer.memory' (до 536870912+) и/или уменьшайте 'linger.ms'/'batch.size'.
#
# Слишком большие записи:
#  - Увеличьте 'h2k.producer.max.request.size' (например, 4194304–8388608) и настройки брокера.