log4j.appender.h2k_stdout=org.apache.log4j.ConsoleAppender
log4j.appender.h2k_stdout.encoding=UTF-8
log4j.appender.h2k_stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.h2k_stdout.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c - %m%n
log4j.appender.h2k_stdout.Threshold=INFO

# === Уровни логирования (шум гасим, наши сообщения — по делу) ===
# Наш пакет по умолчанию — INFO. Всё детальное уводим в DEBUG точечно по классам ниже.
log4j.logger.kz.qazmarka.h2k=INFO,h2k_stdout,h2k_rolling
log4j.additivity.kz.qazmarka.h2k=false

# Тише сторонние библиотеки (можно поднять до INFO при расследованиях)
log4j.logger.org.apache.kafka=WARN
log4j.logger.org.apache.zookeeper=WARN
log4j.logger.org.apache.hadoop=WARN
log4j.logger.org.apache.hadoop.hbase=WARN
log4j.logger.org.apache.phoenix=WARN
# Но оставим информацию о репликации HBase видимой
log4j.logger.org.apache.hadoop.hbase.replication=INFO

# Точечные переключатели DEBUG для наших классов (раскомментируйте по необходимости)
# log4j.logger.kz.qazmarka.h2k.endpoint.KafkaReplicationEndpoint=DEBUG
# log4j.logger.kz.qazmarka.h2k.kafka.BatchSender=DEBUG
# log4j.logger.kz.qazmarka.h2k.kafka.TopicEnsurer=DEBUG
# log4j.logger.kz.qazmarka.h2k.schema.ValueCodecPhoenix=DEBUG
# log4j.logger.kz.qazmarka.h2k.config.H2kConfig=DEBUG
# log4j.logger.kz.qazmarka.h2k.payload.PayloadBuilder=DEBUG

# === (Опционально) Асинхронная консоль для снижения влияния логов на горячий путь ===
# Включайте только если stdout не является критическим каналом синхронной диагностики
#log4j.appender.async=org.apache.log4j.AsyncAppender
#log4j.appender.async.BufferSize=1024
#log4j.appender.async.AppenderRef=h2k_stdout
#log4j.logger.kz.qazmarka.h2k=INFO,async

# === Ротация файлов логов (RollingFileAppender) ===
# Путь по умолчанию; можно переопределить через JVM-флаги.
# ВНИМАНИЕ: если ${hbase.log.dir} не задан, log4j создаст директорию literally "${hbase.log.dir}".
# В юнит‑тестах используйте отдельный тестовый log4j.properties (src/test/resources),
# чтобы не писать файл, если ${hbase.log.dir} не задан.
# Итоговый путь по умолчанию: ${hbase.log.dir}/h2k-endpoint.log (используем директорию HBase)
h2k.log.dir=${hbase.log.dir}
# Единый файл лога (без профилей)
h2k.log.file=${h2k.log.dir}/h2k-endpoint.log

# Параметры ротации настраиваемы через JVM-флаги/ENV
#   -Dh2k.log.maxFileSize=128MB
#   -Dh2k.log.maxBackupIndex=20

h2k.log.maxFileSize=10MB
h2k.log.maxBackupIndex=10

# Буферизация файлового аппендера (для снижения syscalls); можно переопределить JVM-флагами
h2k.log.immediateFlush=false
h2k.log.bufferedIO=true
h2k.log.buffer.size=8192

# RollingFileAppender section
log4j.appender.h2k_rolling=org.apache.log4j.RollingFileAppender
log4j.appender.h2k_rolling.File=${h2k.log.file}
log4j.appender.h2k_rolling.Append=true
log4j.appender.h2k_rolling.encoding=UTF-8
log4j.appender.h2k_rolling.Threshold=INFO
# Буферизуем запись в файл; flush не на каждом сообщении
log4j.appender.h2k_rolling.ImmediateFlush=${h2k.log.immediateFlush}
log4j.appender.h2k_rolling.BufferedIO=${h2k.log.bufferedIO}
log4j.appender.h2k_rolling.BufferSize=${h2k.log.buffer.size}
# Размер одного файла лога и количество бэкапов (храним N файлов)
log4j.appender.h2k_rolling.MaxFileSize=${h2k.log.maxFileSize}
log4j.appender.h2k_rolling.MaxBackupIndex=${h2k.log.maxBackupIndex}
log4j.appender.h2k_rolling.layout=org.apache.log4j.PatternLayout
log4j.appender.h2k_rolling.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c - %m%n

# === Примеры запуска (управляем путём/ротацией через JVM‑флаги) ================
# Эти флаги управляют ТОЛЬКО путём/ротацией логов (см. свойства h2k.log.* выше).
# Параметры продьюсера/репликации управляются через hbase-site.xml (H2kConfig),
# либо через add_peer профили (fast/balanced/reliable).
# ----------------------------------------------------------------------------
# Вариант 1: через HBASE_OPTS (в hbase-env.sh или перед запуском сервиса)
#   export HBASE_OPTS="$HBASE_OPTS -Dh2k.log.dir=/var/log -Dh2k.log.maxFileSize=128MB -Dh2k.log.maxBackupIndex=20"
#   bin/hbase regionserver start
#
# Убедитесь, что процесс HBase имеет право записи в /var/log (обычно через группу/ACL или запуск под пользователем, имеющим доступ)
# ----------------------------------------------------------------------------
# Вариант 2: systemd override для RegionServer (рекомендуемый способ)
#   sudo mkdir -p /etc/systemd/system/hbase-regionserver.service.d
#   sudo tee /etc/systemd/system/hbase-regionserver.service.d/10-h2k-logs.conf >/dev/null <<'EOF'
#   [Service]
#   Environment="HBASE_OPTS=${HBASE_OPTS} -Dh2k.log.dir=/var/log -Dh2k.log.maxFileSize=128MB -Dh2k.log.maxBackupIndex=20"
#   EOF
#   sudo systemctl daemon-reload
#   sudo systemctl restart hbase-regionserver
# ----------------------------------------------------------------------------
# Аналогично можно сделать override для Master: hbase-master.service.d/10-h2k-logs.conf
# ============================================================================